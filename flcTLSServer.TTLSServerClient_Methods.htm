<!DOCTYPE html>
<html>
<head>
<title>TTLSServerClient Methods</title>
<meta http-equiv="X-UA-Compatible" content="IE=edge" />
<meta http-equiv="content-type" content="text/html; charset=UTF-8" />
<meta name="generator" content="Documentation Insight" />
<!--Generated by Documentation Insight (http://www.devjetsoftware.com/). -->
<base target="_self" />
<link type="text/css" rel="Stylesheet" href="css/presentation.css" /> 
    <script type="text/javascript" src="js/jquery.min.js"></script>
    <script type="text/javascript" src="js/jquery.cookie.js"></script>
    <script type="text/javascript" src="js/di.js"></script>
  
    <script type="text/javascript" src="js/jquery-migrate.min.js"></script>
    <!--[if (!IE) | (gt IE 8)]><!-->
    <link type='text/css' rel='Stylesheet' href='css/highlighter.css' />
    <!--<![endif]-->
    <!--[if (!IE) | (gt IE 8)]><!-->
    <script src="js/highlight.min.js"></script>
    <!--<![endif]-->
 <script type="text/javascript"> 
      if (($.browser.msie == undefined) || ($.browser.version > 8)) {
        hljs.tabReplace = '  ';
        $(document).ready(function() {
          $('pre').each(function(i, e) {
            hljs.highlightBlock(e);
          });
        });
      }
           </script><script type="text/javascript">
if (top.frames.length == 0)
{
var topicUrl = top.location.href.substring(top.location.href.lastIndexOf("/") + 1, top.location.href.length);
var regex = new RegExp('(mk:@MSITStore|ms-help):?', 'i')
if(!top.location.href.match(regex)) {
	 top.location.href = "index.htm?" + topicUrl;
}}
else if (top && top.navigationFrame && top.navigationFrame.selectTocItem)
{
top.navigationFrame.selectTocItem("flcTLSServer.TTLSServerClient_Methods");
};
</script>
</head>
<body class="library">
<input type="hidden" id="contentEditableControl" class="userDataStyle" value="false" />
<input type="hidden" id="userDataCache" class="userDataStyle" />
<input type="hidden" id="hiddenScrollOffset" />
<input type="hidden" id="moduleName" value="" />
<input type="hidden" id="elementId" value="" />
<div id="content">
<div class="topic">
<h1 class="title">TTLSServerClient Methods</h1>
<div id="mainSection">
<div id="mainBody">
<div id="IDN1Y4LBTUYE45KJLXBSBHVZBXKBJIZN0WCAKIGBJLGGY1RJ42DX2HSection" class="section">
<div id="IDN1Y4LBTUYE45KJLXBSBHVZBXKBJIZN0WCAKIGBJLGGY1RJ42DX2HHeader" class="sectionHeader">
<div>
<a href="javascript:void(0)" class="collapsibleAreaHref" title="Collapse">
<span class="collapsibleAreaIcon collapsibleAreaExpanding">
<!---->
</span>
<span class="collapsibleAreaTitle">Methods</span>
</a>
</div>
</div>
<div id="IDN1Y4LBTUYE45KJLXBSBHVZBXKBJIZN0WCAKIGBJLGGY1RJ42DX2HContent" class="sectionContent" contentEditable="false">
<div class="tableSection"><table id="IDN1Y4LBTUYE45KJLXBSBHVZBXKBJIZN0WCAKIGBJLGGY1RJ42DX2H"><colgroup><col width="60px" /><col width="20%" /></colgroup><tbody><tr><th class="iconColumn"> </th><th class="nameColumn">Name</th><th class="descriptionColumn">Description</th></tr><tr class="protected "><td><img src="images/protmethod.gif" title="protected method" /></td><td class="memberId" data-id="flcTLSServer.TTLSServerClient.DoStart"><input type="hidden" value="flcTLSServer.TTLSServerClient.DoStart" /><a href="flcTLSServer.TTLSServerClient.DoStart.htm" title="flcTLSServer.TTLSServerClient.DoStart">DoStart</a></td><td><div class="memberSummary" data-id="flcTLSServer.TTLSServerClient.DoStart"><p>Represents method <code class="inline">DoStart</code>.</p></div></td></tr><tr class="protected "><td><img src="images/protmethod.gif" title="protected method" /></td><td class="memberId" data-id="flcTLSServer.TTLSServerClient.HandleHandshakeCertificateVerify(Void,Integer)"><input type="hidden" value="flcTLSServer.TTLSServerClient.HandleHandshakeCertificateVerify(Void,Integer)" /><a href="flcTLSServer.TTLSServerClient.HandleHandshakeCertificateVerify.htm" title="flcTLSServer.TTLSServerClient.HandleHandshakeCertificateVerify(Void,Integer)">HandleHandshakeCertificateVerify(Void,Integer)</a></td><td><div class="memberSummary" data-id="flcTLSServer.TTLSServerClient.HandleHandshakeCertificateVerify(Void,Integer)"><p>Represents method <code class="inline">HandleHandshakeCertificateVerify(Void,Integer)</code>.</p></div></td></tr><tr class="protected "><td><img src="images/protmethod.gif" title="protected method" /></td><td class="memberId" data-id="flcTLSServer.TTLSServerClient.HandleHandshakeClientHello(Void,Integer)"><input type="hidden" value="flcTLSServer.TTLSServerClient.HandleHandshakeClientHello(Void,Integer)" /><a href="flcTLSServer.TTLSServerClient.HandleHandshakeClientHello.htm" title="flcTLSServer.TTLSServerClient.HandleHandshakeClientHello(Void,Integer)">HandleHandshakeClientHello(Void,Integer)</a></td><td><div class="memberSummary" data-id="flcTLSServer.TTLSServerClient.HandleHandshakeClientHello(Void,Integer)"><p>Represents method <code class="inline">HandleHandshakeClientHello(Void,Integer)</code>.</p></div></td></tr><tr class="protected "><td><img src="images/protmethod.gif" title="protected method" /></td><td class="memberId" data-id="flcTLSServer.TTLSServerClient.HandleHandshakeClientKeyExchange(Void,Integer)"><input type="hidden" value="flcTLSServer.TTLSServerClient.HandleHandshakeClientKeyExchange(Void,Integer)" /><a href="flcTLSServer.TTLSServerClient.HandleHandshakeClientKeyExchange.htm" title="flcTLSServer.TTLSServerClient.HandleHandshakeClientKeyExchange(Void,Integer)">HandleHandshakeClientKeyExchange(Void,Integer)</a></td><td><div class="memberSummary" data-id="flcTLSServer.TTLSServerClient.HandleHandshakeClientKeyExchange(Void,Integer)"><p>Represents method <code class="inline">HandleHandshakeClientKeyExchange(Void,Integer)</code>.</p></div></td></tr><tr class="protected "><td><img src="images/protmethod.gif" title="protected method" /></td><td class="memberId" data-id="flcTLSServer.TTLSServerClient.HandleHandshakeFinished(Void,Integer)"><input type="hidden" value="flcTLSServer.TTLSServerClient.HandleHandshakeFinished(Void,Integer)" /><a href="flcTLSServer.TTLSServerClient.HandleHandshakeFinished.htm" title="flcTLSServer.TTLSServerClient.HandleHandshakeFinished(Void,Integer)">HandleHandshakeFinished(Void,Integer)</a></td><td><div class="memberSummary" data-id="flcTLSServer.TTLSServerClient.HandleHandshakeFinished(Void,Integer)"><p>Represents method <code class="inline">HandleHandshakeFinished(Void,Integer)</code>.</p></div></td></tr><tr class="protected "><td><img src="images/protmethod.gif" title="protected method" /></td><td class="memberId" data-id="flcTLSServer.TTLSServerClient.HandleHandshakeMessage(TTLSHandshakeType,Void,Integer)"><input type="hidden" value="flcTLSServer.TTLSServerClient.HandleHandshakeMessage(TTLSHandshakeType,Void,Integer)" /><a href="flcTLSServer.TTLSServerClient.HandleHandshakeMessage.htm" title="flcTLSServer.TTLSServerClient.HandleHandshakeMessage(TTLSHandshakeType,Void,Integer)">HandleHandshakeMessage(TTLSHandshakeType,Void,Integer)</a></td><td><div class="memberSummary" data-id="flcTLSServer.TTLSServerClient.HandleHandshakeMessage(TTLSHandshakeType,Void,Integer)"><p>Represents method <code class="inline">HandleHandshakeMessage(TTLSHandshakeType,Void,Integer)</code>. (Overrides <a href="flcTLSConnection.TTLSConnection.HandleHandshakeMessage.htm" title="flcTLSConnection.TTLSConnection.HandleHandshakeMessage(TTLSHandshakeType,Void,Integer)">TTLSConnection.HandleHandshakeMessage(TTLSHandshakeType,Void,Integer)</a>.)</p></div></td></tr><tr class="protected "><td><img src="images/protmethod.gif" title="protected method" /></td><td class="memberId" data-id="flcTLSServer.TTLSServerClient.InitCipherSpecNone"><input type="hidden" value="flcTLSServer.TTLSServerClient.InitCipherSpecNone" /><a href="flcTLSServer.TTLSServerClient.InitCipherSpecNone.htm" title="flcTLSServer.TTLSServerClient.InitCipherSpecNone">InitCipherSpecNone</a></td><td><div class="memberSummary" data-id="flcTLSServer.TTLSServerClient.InitCipherSpecNone"><p>Represents method <code class="inline">InitCipherSpecNone</code>.</p></div></td></tr><tr class="protected "><td><img src="images/protmethod.gif" title="protected method" /></td><td class="memberId" data-id="flcTLSServer.TTLSServerClient.InitDHState"><input type="hidden" value="flcTLSServer.TTLSServerClient.InitDHState" /><a href="flcTLSServer.TTLSServerClient.InitDHState.htm" title="flcTLSServer.TTLSServerClient.InitDHState">InitDHState</a></td><td><div class="memberSummary" data-id="flcTLSServer.TTLSServerClient.InitDHState"><p>Represents method <code class="inline">InitDHState</code>.</p></div></td></tr><tr class="protected "><td><img src="images/protmethod.gif" title="protected method" /></td><td class="memberId" data-id="flcTLSServer.TTLSServerClient.InitHandshakeServerHello"><input type="hidden" value="flcTLSServer.TTLSServerClient.InitHandshakeServerHello" /><a href="flcTLSServer.TTLSServerClient.InitHandshakeServerHello.htm" title="flcTLSServer.TTLSServerClient.InitHandshakeServerHello">InitHandshakeServerHello</a></td><td><div class="memberSummary" data-id="flcTLSServer.TTLSServerClient.InitHandshakeServerHello"><p>Represents method <code class="inline">InitHandshakeServerHello</code>.</p></div></td></tr><tr class="protected "><td><img src="images/protmethod.gif" title="protected method" /></td><td class="memberId" data-id="flcTLSServer.TTLSServerClient.InitHandshakeServerKeyExchange"><input type="hidden" value="flcTLSServer.TTLSServerClient.InitHandshakeServerKeyExchange" /><a href="flcTLSServer.TTLSServerClient.InitHandshakeServerKeyExchange.htm" title="flcTLSServer.TTLSServerClient.InitHandshakeServerKeyExchange">InitHandshakeServerKeyExchange</a></td><td><div class="memberSummary" data-id="flcTLSServer.TTLSServerClient.InitHandshakeServerKeyExchange"><p>Represents method <code class="inline">InitHandshakeServerKeyExchange</code>.</p></div></td></tr><tr class="protected "><td><img src="images/protmethod.gif" title="protected method" /></td><td class="memberId" data-id="flcTLSServer.TTLSServerClient.InitProtocolVersion"><input type="hidden" value="flcTLSServer.TTLSServerClient.InitProtocolVersion" /><a href="flcTLSServer.TTLSServerClient.InitProtocolVersion.htm" title="flcTLSServer.TTLSServerClient.InitProtocolVersion">InitProtocolVersion</a></td><td><div class="memberSummary" data-id="flcTLSServer.TTLSServerClient.InitProtocolVersion"><p>Represents method <code class="inline">InitProtocolVersion</code>.</p></div></td></tr><tr class="protected "><td><img src="images/protmethod.gif" title="protected method" /></td><td class="memberId" data-id="flcTLSServer.TTLSServerClient.SelectCipherSuite(TTLSCipherSuite@)"><input type="hidden" value="flcTLSServer.TTLSServerClient.SelectCipherSuite(TTLSCipherSuite@)" /><a href="flcTLSServer.TTLSServerClient.SelectCipherSuite.htm" title="flcTLSServer.TTLSServerClient.SelectCipherSuite(TTLSCipherSuite)">SelectCipherSuite(TTLSCipherSuite)</a></td><td><div class="memberSummary" data-id="flcTLSServer.TTLSServerClient.SelectCipherSuite(TTLSCipherSuite@)"><p>Represents method <code class="inline">SelectCipherSuite(TTLSCipherSuite)</code>.</p></div></td></tr><tr class="protected "><td><img src="images/protmethod.gif" title="protected method" /></td><td class="memberId" data-id="flcTLSServer.TTLSServerClient.SelectCompression(TTLSCompressionMethod@)"><input type="hidden" value="flcTLSServer.TTLSServerClient.SelectCompression(TTLSCompressionMethod@)" /><a href="flcTLSServer.TTLSServerClient.SelectCompression.htm" title="flcTLSServer.TTLSServerClient.SelectCompression(TTLSCompressionMethod)">SelectCompression(TTLSCompressionMethod)</a></td><td><div class="memberSummary" data-id="flcTLSServer.TTLSServerClient.SelectCompression(TTLSCompressionMethod@)"><p>Represents method <code class="inline">SelectCompression(TTLSCompressionMethod)</code>.</p></div></td></tr><tr class="protected "><td><img src="images/protmethod.gif" title="protected method" /></td><td class="memberId" data-id="flcTLSServer.TTLSServerClient.SendHandshakeCertificate"><input type="hidden" value="flcTLSServer.TTLSServerClient.SendHandshakeCertificate" /><a href="flcTLSServer.TTLSServerClient.SendHandshakeCertificate.htm" title="flcTLSServer.TTLSServerClient.SendHandshakeCertificate">SendHandshakeCertificate</a></td><td><div class="memberSummary" data-id="flcTLSServer.TTLSServerClient.SendHandshakeCertificate"><p>Represents method <code class="inline">SendHandshakeCertificate</code>.</p></div></td></tr><tr class="protected "><td><img src="images/protmethod.gif" title="protected method" /></td><td class="memberId" data-id="flcTLSServer.TTLSServerClient.SendHandshakeCertificateRequest"><input type="hidden" value="flcTLSServer.TTLSServerClient.SendHandshakeCertificateRequest" /><a href="flcTLSServer.TTLSServerClient.SendHandshakeCertificateRequest.htm" title="flcTLSServer.TTLSServerClient.SendHandshakeCertificateRequest">SendHandshakeCertificateRequest</a></td><td><div class="memberSummary" data-id="flcTLSServer.TTLSServerClient.SendHandshakeCertificateRequest"><p>Represents method <code class="inline">SendHandshakeCertificateRequest</code>.</p></div></td></tr><tr class="protected "><td><img src="images/protmethod.gif" title="protected method" /></td><td class="memberId" data-id="flcTLSServer.TTLSServerClient.SendHandshakeFinished"><input type="hidden" value="flcTLSServer.TTLSServerClient.SendHandshakeFinished" /><a href="flcTLSServer.TTLSServerClient.SendHandshakeFinished.htm" title="flcTLSServer.TTLSServerClient.SendHandshakeFinished">SendHandshakeFinished</a></td><td><div class="memberSummary" data-id="flcTLSServer.TTLSServerClient.SendHandshakeFinished"><p>Represents method <code class="inline">SendHandshakeFinished</code>.</p></div></td></tr><tr class="protected "><td><img src="images/protmethod.gif" title="protected method" /></td><td class="memberId" data-id="flcTLSServer.TTLSServerClient.SendHandshakeHelloRequest"><input type="hidden" value="flcTLSServer.TTLSServerClient.SendHandshakeHelloRequest" /><a href="flcTLSServer.TTLSServerClient.SendHandshakeHelloRequest.htm" title="flcTLSServer.TTLSServerClient.SendHandshakeHelloRequest">SendHandshakeHelloRequest</a></td><td><div class="memberSummary" data-id="flcTLSServer.TTLSServerClient.SendHandshakeHelloRequest"><p>Represents method <code class="inline">SendHandshakeHelloRequest</code>.</p></div></td></tr><tr class="protected "><td><img src="images/protmethod.gif" title="protected method" /></td><td class="memberId" data-id="flcTLSServer.TTLSServerClient.SendHandshakeServerHello"><input type="hidden" value="flcTLSServer.TTLSServerClient.SendHandshakeServerHello" /><a href="flcTLSServer.TTLSServerClient.SendHandshakeServerHello.htm" title="flcTLSServer.TTLSServerClient.SendHandshakeServerHello">SendHandshakeServerHello</a></td><td><div class="memberSummary" data-id="flcTLSServer.TTLSServerClient.SendHandshakeServerHello"><p>Represents method <code class="inline">SendHandshakeServerHello</code>.</p></div></td></tr><tr class="protected "><td><img src="images/protmethod.gif" title="protected method" /></td><td class="memberId" data-id="flcTLSServer.TTLSServerClient.SendHandshakeServerHelloDone"><input type="hidden" value="flcTLSServer.TTLSServerClient.SendHandshakeServerHelloDone" /><a href="flcTLSServer.TTLSServerClient.SendHandshakeServerHelloDone.htm" title="flcTLSServer.TTLSServerClient.SendHandshakeServerHelloDone">SendHandshakeServerHelloDone</a></td><td><div class="memberSummary" data-id="flcTLSServer.TTLSServerClient.SendHandshakeServerHelloDone"><p>Represents method <code class="inline">SendHandshakeServerHelloDone</code>.</p></div></td></tr><tr class="protected "><td><img src="images/protmethod.gif" title="protected method" /></td><td class="memberId" data-id="flcTLSServer.TTLSServerClient.SendHandshakeServerKeyExchange"><input type="hidden" value="flcTLSServer.TTLSServerClient.SendHandshakeServerKeyExchange" /><a href="flcTLSServer.TTLSServerClient.SendHandshakeServerKeyExchange.htm" title="flcTLSServer.TTLSServerClient.SendHandshakeServerKeyExchange">SendHandshakeServerKeyExchange</a></td><td><div class="memberSummary" data-id="flcTLSServer.TTLSServerClient.SendHandshakeServerKeyExchange"><p>Represents method <code class="inline">SendHandshakeServerKeyExchange</code>.</p></div></td></tr><tr class="protected "><td><img src="images/protmethod.gif" title="protected method" /></td><td class="memberId" data-id="flcTLSServer.TTLSServerClient.SetClientState(TTLSServerClientState)"><input type="hidden" value="flcTLSServer.TTLSServerClient.SetClientState(TTLSServerClientState)" /><a href="flcTLSServer.TTLSServerClient.SetClientState.htm" title="flcTLSServer.TTLSServerClient.SetClientState(TTLSServerClientState)">SetClientState(TTLSServerClientState)</a></td><td><div class="memberSummary" data-id="flcTLSServer.TTLSServerClient.SetClientState(TTLSServerClientState)"><p>Represents method <code class="inline">SetClientState(TTLSServerClientState)</code>.</p></div></td></tr><tr class="member"><td><img src="images/pubmethod.gif" title="public method" /></td><td class="memberId" data-id="flcTLSServer.TTLSServerClient.Start"><input type="hidden" value="flcTLSServer.TTLSServerClient.Start" /><a href="flcTLSServer.TTLSServerClient.Start.htm" title="flcTLSServer.TTLSServerClient.Start">Start</a></td><td><div class="memberSummary" data-id="flcTLSServer.TTLSServerClient.Start"><p>Represents method <code class="inline">Start</code>.</p></div></td></tr><tr class="protected "><td><img src="images/protmethod.gif" title="protected method" /></td><td class="memberId" data-id="flcTLSServer.TTLSServerClient.TransportLayerSendProc(TTLSConnection,Void,Integer)"><input type="hidden" value="flcTLSServer.TTLSServerClient.TransportLayerSendProc(TTLSConnection,Void,Integer)" /><a href="flcTLSServer.TTLSServerClient.TransportLayerSendProc.htm" title="flcTLSServer.TTLSServerClient.TransportLayerSendProc(TTLSConnection,Void,Integer)">TransportLayerSendProc(TTLSConnection,Void,Integer)</a></td><td><div class="memberSummary" data-id="flcTLSServer.TTLSServerClient.TransportLayerSendProc(TTLSConnection,Void,Integer)"><p>Represents method <code class="inline">TransportLayerSendProc(TTLSConnection,Void,Integer)</code>.</p></div></td></tr><tr class="protected "><td><img src="images/protmethod.gif" title="protected method" /></td><td class="memberId" data-id="flcTLSServer.TTLSServerClient.TriggerAlert(TTLSAlertLevel,TTLSAlertDescription)"><input type="hidden" value="flcTLSServer.TTLSServerClient.TriggerAlert(TTLSAlertLevel,TTLSAlertDescription)" /><a href="flcTLSServer.TTLSServerClient.TriggerAlert.htm" title="flcTLSServer.TTLSServerClient.TriggerAlert(TTLSAlertLevel,TTLSAlertDescription)">TriggerAlert(TTLSAlertLevel,TTLSAlertDescription)</a></td><td><div class="memberSummary" data-id="flcTLSServer.TTLSServerClient.TriggerAlert(TTLSAlertLevel,TTLSAlertDescription)"><p>Represents method <code class="inline">TriggerAlert(TTLSAlertLevel,TTLSAlertDescription)</code>. (Overrides <a href="flcTLSConnection.TTLSConnection.TriggerAlert.htm" title="flcTLSConnection.TTLSConnection.TriggerAlert(TTLSAlertLevel,TTLSAlertDescription)">TTLSConnection.TriggerAlert(TTLSAlertLevel,TTLSAlertDescription)</a>.)</p></div></td></tr><tr class="protected "><td><img src="images/protmethod.gif" title="protected method" /></td><td class="memberId" data-id="flcTLSServer.TTLSServerClient.TriggerConnectionStateChange"><input type="hidden" value="flcTLSServer.TTLSServerClient.TriggerConnectionStateChange" /><a href="flcTLSServer.TTLSServerClient.TriggerConnectionStateChange.htm" title="flcTLSServer.TTLSServerClient.TriggerConnectionStateChange">TriggerConnectionStateChange</a></td><td><div class="memberSummary" data-id="flcTLSServer.TTLSServerClient.TriggerConnectionStateChange"><p>Represents method <code class="inline">TriggerConnectionStateChange</code>. (Overrides <a href="flcTLSConnection.TTLSConnection.TriggerConnectionStateChange.htm" title="flcTLSConnection.TTLSConnection.TriggerConnectionStateChange">TTLSConnection.TriggerConnectionStateChange</a>.)</p></div></td></tr><tr class="protected "><td><img src="images/protmethod.gif" title="protected method" /></td><td class="memberId" data-id="flcTLSServer.TTLSServerClient.TriggerHandshakeFinished"><input type="hidden" value="flcTLSServer.TTLSServerClient.TriggerHandshakeFinished" /><a href="flcTLSServer.TTLSServerClient.TriggerHandshakeFinished.htm" title="flcTLSServer.TTLSServerClient.TriggerHandshakeFinished">TriggerHandshakeFinished</a></td><td><div class="memberSummary" data-id="flcTLSServer.TTLSServerClient.TriggerHandshakeFinished"><p>Represents method <code class="inline">TriggerHandshakeFinished</code>. (Overrides <a href="flcTLSConnection.TTLSConnection.TriggerHandshakeFinished.htm" title="flcTLSConnection.TTLSConnection.TriggerHandshakeFinished">TTLSConnection.TriggerHandshakeFinished</a>.)</p></div></td></tr><tr class="protected "><td><img src="images/protmethod.gif" title="protected method" /></td><td class="memberId" data-id="flcTLSServer.TTLSServerClient.TriggerLog(TTLSLogType,String,Integer)"><input type="hidden" value="flcTLSServer.TTLSServerClient.TriggerLog(TTLSLogType,String,Integer)" /><a href="flcTLSServer.TTLSServerClient.TriggerLog.htm" title="flcTLSServer.TTLSServerClient.TriggerLog(TTLSLogType,String,Integer)">TriggerLog(TTLSLogType,String,Integer)</a></td><td><div class="memberSummary" data-id="flcTLSServer.TTLSServerClient.TriggerLog(TTLSLogType,String,Integer)"><p>Represents method <code class="inline">TriggerLog(TTLSLogType,String,Integer)</code>. (Overrides <a href="flcTLSConnection.TTLSConnection.TriggerLog.htm" title="flcTLSConnection.TTLSConnection.TriggerLog(TTLSLogType,String,Integer)">TTLSConnection.TriggerLog(TTLSLogType,String,Integer)</a>.)</p></div></td></tr></tbody></table><a href="#mainBody">Top</a></div>
</div>
</div>
</div>
</div>
</div>
</div>
<div id="footer">
<div id="footerContent">Copyright (c) 1995-2019, David J Butler. All rights reserved.</div>
</div>
</body>
</html>
