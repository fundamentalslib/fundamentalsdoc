<!DOCTYPE html>
<html>
<head>
<title>TTLSClient Methods</title>
<meta http-equiv="X-UA-Compatible" content="IE=edge" />
<meta http-equiv="content-type" content="text/html; charset=UTF-8" />
<meta name="generator" content="Documentation Insight" />
<!--Generated by Documentation Insight (http://www.devjetsoftware.com/). -->
<base target="_self" />
<link type="text/css" rel="Stylesheet" href="css/presentation.css" /> 
    <script type="text/javascript" src="js/jquery.min.js"></script>
    <script type="text/javascript" src="js/jquery.cookie.js"></script>
    <script type="text/javascript" src="js/di.js"></script>
  
    <script type="text/javascript" src="js/jquery-migrate.min.js"></script>
    <!--[if (!IE) | (gt IE 8)]><!-->
    <link type='text/css' rel='Stylesheet' href='css/highlighter.css' />
    <!--<![endif]-->
    <!--[if (!IE) | (gt IE 8)]><!-->
    <script src="js/highlight.min.js"></script>
    <!--<![endif]-->
 <script type="text/javascript"> 
      if (($.browser.msie == undefined) || ($.browser.version > 8)) {
        hljs.tabReplace = '  ';
        $(document).ready(function() {
          $('pre').each(function(i, e) {
            hljs.highlightBlock(e);
          });
        });
      }
           </script><script type="text/javascript">
if (top.frames.length == 0)
{
var topicUrl = top.location.href.substring(top.location.href.lastIndexOf("/") + 1, top.location.href.length);
var regex = new RegExp('(mk:@MSITStore|ms-help):?', 'i')
if(!top.location.href.match(regex)) {
	 top.location.href = "index.htm?" + topicUrl;
}}
else if (top && top.navigationFrame && top.navigationFrame.selectTocItem)
{
top.navigationFrame.selectTocItem("flcTLSClient.TTLSClient_Methods");
};
</script>
</head>
<body class="library">
<input type="hidden" id="contentEditableControl" class="userDataStyle" value="false" />
<input type="hidden" id="userDataCache" class="userDataStyle" />
<input type="hidden" id="hiddenScrollOffset" />
<input type="hidden" id="moduleName" value="" />
<input type="hidden" id="elementId" value="" />
<div id="content">
<div class="topic">
<h1 class="title">TTLSClient Methods</h1>
<div id="mainSection">
<div id="mainBody">
<div id="ID3XXYOPTPP4EIGXPLOKZ5NDZAMFKUYI2FPKJBDJCATV5FOTQRUMFNSection" class="section">
<div id="ID3XXYOPTPP4EIGXPLOKZ5NDZAMFKUYI2FPKJBDJCATV5FOTQRUMFNHeader" class="sectionHeader">
<div>
<a href="javascript:void(0)" class="collapsibleAreaHref" title="Collapse">
<span class="collapsibleAreaIcon collapsibleAreaExpanding">
<!---->
</span>
<span class="collapsibleAreaTitle">Methods</span>
</a>
</div>
</div>
<div id="ID3XXYOPTPP4EIGXPLOKZ5NDZAMFKUYI2FPKJBDJCATV5FOTQRUMFNContent" class="sectionContent" contentEditable="false">
<div class="tableSection"><table id="ID3XXYOPTPP4EIGXPLOKZ5NDZAMFKUYI2FPKJBDJCATV5FOTQRUMFN"><colgroup><col width="60px" /><col width="20%" /></colgroup><tbody><tr><th class="iconColumn"> </th><th class="nameColumn">Name</th><th class="descriptionColumn">Description</th></tr><tr class="protected "><td><img src="images/protmethod.gif" title="protected method" /></td><td class="memberId" data-id="flcTLSClient.TTLSClient.CheckNotActive"><input type="hidden" value="flcTLSClient.TTLSClient.CheckNotActive" /><a href="flcTLSClient.TTLSClient.CheckNotActive.htm" title="flcTLSClient.TTLSClient.CheckNotActive">CheckNotActive</a></td><td><div class="memberSummary" data-id="flcTLSClient.TTLSClient.CheckNotActive"><p>Represents method <code class="inline">CheckNotActive</code>.</p></div></td></tr><tr class="protected "><td><img src="images/protmethod.gif" title="protected method" /></td><td class="memberId" data-id="flcTLSClient.TTLSClient.DoStart"><input type="hidden" value="flcTLSClient.TTLSClient.DoStart" /><a href="flcTLSClient.TTLSClient.DoStart.htm" title="flcTLSClient.TTLSClient.DoStart">DoStart</a></td><td><div class="memberSummary" data-id="flcTLSClient.TTLSClient.DoStart"><p>Represents method <code class="inline">DoStart</code>.</p></div></td></tr><tr class="protected "><td><img src="images/protmethod.gif" title="protected method" /></td><td class="memberId" data-id="flcTLSClient.TTLSClient.HandleHandshakeCertificate(Void,Integer)"><input type="hidden" value="flcTLSClient.TTLSClient.HandleHandshakeCertificate(Void,Integer)" /><a href="flcTLSClient.TTLSClient.HandleHandshakeCertificate.htm" title="flcTLSClient.TTLSClient.HandleHandshakeCertificate(Void,Integer)">HandleHandshakeCertificate(Void,Integer)</a></td><td><div class="memberSummary" data-id="flcTLSClient.TTLSClient.HandleHandshakeCertificate(Void,Integer)"><p>Represents method <code class="inline">HandleHandshakeCertificate(Void,Integer)</code>.</p></div></td></tr><tr class="protected "><td><img src="images/protmethod.gif" title="protected method" /></td><td class="memberId" data-id="flcTLSClient.TTLSClient.HandleHandshakeCertificateRequest(Void,Integer)"><input type="hidden" value="flcTLSClient.TTLSClient.HandleHandshakeCertificateRequest(Void,Integer)" /><a href="flcTLSClient.TTLSClient.HandleHandshakeCertificateRequest.htm" title="flcTLSClient.TTLSClient.HandleHandshakeCertificateRequest(Void,Integer)">HandleHandshakeCertificateRequest(Void,Integer)</a></td><td><div class="memberSummary" data-id="flcTLSClient.TTLSClient.HandleHandshakeCertificateRequest(Void,Integer)"><p>Represents method <code class="inline">HandleHandshakeCertificateRequest(Void,Integer)</code>.</p></div></td></tr><tr class="protected "><td><img src="images/protmethod.gif" title="protected method" /></td><td class="memberId" data-id="flcTLSClient.TTLSClient.HandleHandshakeFinished(Void,Integer)"><input type="hidden" value="flcTLSClient.TTLSClient.HandleHandshakeFinished(Void,Integer)" /><a href="flcTLSClient.TTLSClient.HandleHandshakeFinished.htm" title="flcTLSClient.TTLSClient.HandleHandshakeFinished(Void,Integer)">HandleHandshakeFinished(Void,Integer)</a></td><td><div class="memberSummary" data-id="flcTLSClient.TTLSClient.HandleHandshakeFinished(Void,Integer)"><p>Represents method <code class="inline">HandleHandshakeFinished(Void,Integer)</code>.</p></div></td></tr><tr class="protected "><td><img src="images/protmethod.gif" title="protected method" /></td><td class="memberId" data-id="flcTLSClient.TTLSClient.HandleHandshakeHelloRequest(Void,Integer)"><input type="hidden" value="flcTLSClient.TTLSClient.HandleHandshakeHelloRequest(Void,Integer)" /><a href="flcTLSClient.TTLSClient.HandleHandshakeHelloRequest.htm" title="flcTLSClient.TTLSClient.HandleHandshakeHelloRequest(Void,Integer)">HandleHandshakeHelloRequest(Void,Integer)</a></td><td><div class="memberSummary" data-id="flcTLSClient.TTLSClient.HandleHandshakeHelloRequest(Void,Integer)"><p>Represents method <code class="inline">HandleHandshakeHelloRequest(Void,Integer)</code>.</p></div></td></tr><tr class="protected "><td><img src="images/protmethod.gif" title="protected method" /></td><td class="memberId" data-id="flcTLSClient.TTLSClient.HandleHandshakeMessage(TTLSHandshakeType,Void,Integer)"><input type="hidden" value="flcTLSClient.TTLSClient.HandleHandshakeMessage(TTLSHandshakeType,Void,Integer)" /><a href="flcTLSClient.TTLSClient.HandleHandshakeMessage.htm" title="flcTLSClient.TTLSClient.HandleHandshakeMessage(TTLSHandshakeType,Void,Integer)">HandleHandshakeMessage(TTLSHandshakeType,Void,Integer)</a></td><td><div class="memberSummary" data-id="flcTLSClient.TTLSClient.HandleHandshakeMessage(TTLSHandshakeType,Void,Integer)"><p>Represents method <code class="inline">HandleHandshakeMessage(TTLSHandshakeType,Void,Integer)</code>. (Overrides <a href="flcTLSConnection.TTLSConnection.HandleHandshakeMessage.htm" title="flcTLSConnection.TTLSConnection.HandleHandshakeMessage(TTLSHandshakeType,Void,Integer)">TTLSConnection.HandleHandshakeMessage(TTLSHandshakeType,Void,Integer)</a>.)</p></div></td></tr><tr class="protected "><td><img src="images/protmethod.gif" title="protected method" /></td><td class="memberId" data-id="flcTLSClient.TTLSClient.HandleHandshakeServerHello(Void,Integer)"><input type="hidden" value="flcTLSClient.TTLSClient.HandleHandshakeServerHello(Void,Integer)" /><a href="flcTLSClient.TTLSClient.HandleHandshakeServerHello.htm" title="flcTLSClient.TTLSClient.HandleHandshakeServerHello(Void,Integer)">HandleHandshakeServerHello(Void,Integer)</a></td><td><div class="memberSummary" data-id="flcTLSClient.TTLSClient.HandleHandshakeServerHello(Void,Integer)"><p>Represents method <code class="inline">HandleHandshakeServerHello(Void,Integer)</code>.</p></div></td></tr><tr class="protected "><td><img src="images/protmethod.gif" title="protected method" /></td><td class="memberId" data-id="flcTLSClient.TTLSClient.HandleHandshakeServerHelloDone(Void,Integer)"><input type="hidden" value="flcTLSClient.TTLSClient.HandleHandshakeServerHelloDone(Void,Integer)" /><a href="flcTLSClient.TTLSClient.HandleHandshakeServerHelloDone.htm" title="flcTLSClient.TTLSClient.HandleHandshakeServerHelloDone(Void,Integer)">HandleHandshakeServerHelloDone(Void,Integer)</a></td><td><div class="memberSummary" data-id="flcTLSClient.TTLSClient.HandleHandshakeServerHelloDone(Void,Integer)"><p>Represents method <code class="inline">HandleHandshakeServerHelloDone(Void,Integer)</code>.</p></div></td></tr><tr class="protected "><td><img src="images/protmethod.gif" title="protected method" /></td><td class="memberId" data-id="flcTLSClient.TTLSClient.HandleHandshakeServerKeyExchange(Void,Integer)"><input type="hidden" value="flcTLSClient.TTLSClient.HandleHandshakeServerKeyExchange(Void,Integer)" /><a href="flcTLSClient.TTLSClient.HandleHandshakeServerKeyExchange.htm" title="flcTLSClient.TTLSClient.HandleHandshakeServerKeyExchange(Void,Integer)">HandleHandshakeServerKeyExchange(Void,Integer)</a></td><td><div class="memberSummary" data-id="flcTLSClient.TTLSClient.HandleHandshakeServerKeyExchange(Void,Integer)"><p>Represents method <code class="inline">HandleHandshakeServerKeyExchange(Void,Integer)</code>.</p></div></td></tr><tr class="protected "><td><img src="images/protmethod.gif" title="protected method" /></td><td class="memberId" data-id="flcTLSClient.TTLSClient.Init"><input type="hidden" value="flcTLSClient.TTLSClient.Init" /><a href="flcTLSClient.TTLSClient.Init.htm" title="flcTLSClient.TTLSClient.Init">Init</a></td><td><div class="memberSummary" data-id="flcTLSClient.TTLSClient.Init"><p>Represents method <code class="inline">Init</code>. (Overrides <a href="flcTLSConnection.TTLSConnection.Init.htm" title="flcTLSConnection.TTLSConnection.Init">TTLSConnection.Init</a>.)</p></div></td></tr><tr class="protected "><td><img src="images/protmethod.gif" title="protected method" /></td><td class="memberId" data-id="flcTLSClient.TTLSClient.InitCipherSpecNewFromServerHello"><input type="hidden" value="flcTLSClient.TTLSClient.InitCipherSpecNewFromServerHello" /><a href="flcTLSClient.TTLSClient.InitCipherSpecNewFromServerHello.htm" title="flcTLSClient.TTLSClient.InitCipherSpecNewFromServerHello">InitCipherSpecNewFromServerHello</a></td><td><div class="memberSummary" data-id="flcTLSClient.TTLSClient.InitCipherSpecNewFromServerHello"><p>Represents method <code class="inline">InitCipherSpecNewFromServerHello</code>.</p></div></td></tr><tr class="protected "><td><img src="images/protmethod.gif" title="protected method" /></td><td class="memberId" data-id="flcTLSClient.TTLSClient.InitCipherSpecNone"><input type="hidden" value="flcTLSClient.TTLSClient.InitCipherSpecNone" /><a href="flcTLSClient.TTLSClient.InitCipherSpecNone.htm" title="flcTLSClient.TTLSClient.InitCipherSpecNone">InitCipherSpecNone</a></td><td><div class="memberSummary" data-id="flcTLSClient.TTLSClient.InitCipherSpecNone"><p>Represents method <code class="inline">InitCipherSpecNone</code>.</p></div></td></tr><tr class="protected "><td><img src="images/protmethod.gif" title="protected method" /></td><td class="memberId" data-id="flcTLSClient.TTLSClient.InitClientHelloCipherSuites"><input type="hidden" value="flcTLSClient.TTLSClient.InitClientHelloCipherSuites" /><a href="flcTLSClient.TTLSClient.InitClientHelloCipherSuites.htm" title="flcTLSClient.TTLSClient.InitClientHelloCipherSuites">InitClientHelloCipherSuites</a></td><td><div class="memberSummary" data-id="flcTLSClient.TTLSClient.InitClientHelloCipherSuites"><p>Represents method <code class="inline">InitClientHelloCipherSuites</code>.</p></div></td></tr><tr class="protected "><td><img src="images/protmethod.gif" title="protected method" /></td><td class="memberId" data-id="flcTLSClient.TTLSClient.InitDHState"><input type="hidden" value="flcTLSClient.TTLSClient.InitDHState" /><a href="flcTLSClient.TTLSClient.InitDHState.htm" title="flcTLSClient.TTLSClient.InitDHState">InitDHState</a></td><td><div class="memberSummary" data-id="flcTLSClient.TTLSClient.InitDHState"><p>Represents method <code class="inline">InitDHState</code>.</p></div></td></tr><tr class="protected "><td><img src="images/protmethod.gif" title="protected method" /></td><td class="memberId" data-id="flcTLSClient.TTLSClient.InitHandshakeClientHello"><input type="hidden" value="flcTLSClient.TTLSClient.InitHandshakeClientHello" /><a href="flcTLSClient.TTLSClient.InitHandshakeClientHello.htm" title="flcTLSClient.TTLSClient.InitHandshakeClientHello">InitHandshakeClientHello</a></td><td><div class="memberSummary" data-id="flcTLSClient.TTLSClient.InitHandshakeClientHello"><p>Represents method <code class="inline">InitHandshakeClientHello</code>.</p></div></td></tr><tr class="protected "><td><img src="images/protmethod.gif" title="protected method" /></td><td class="memberId" data-id="flcTLSClient.TTLSClient.InitHandshakeClientKeyExchange"><input type="hidden" value="flcTLSClient.TTLSClient.InitHandshakeClientKeyExchange" /><a href="flcTLSClient.TTLSClient.InitHandshakeClientKeyExchange.htm" title="flcTLSClient.TTLSClient.InitHandshakeClientKeyExchange">InitHandshakeClientKeyExchange</a></td><td><div class="memberSummary" data-id="flcTLSClient.TTLSClient.InitHandshakeClientKeyExchange"><p>Represents method <code class="inline">InitHandshakeClientKeyExchange</code>.</p></div></td></tr><tr class="protected "><td><img src="images/protmethod.gif" title="protected method" /></td><td class="memberId" data-id="flcTLSClient.TTLSClient.InitInitialProtocolVersion"><input type="hidden" value="flcTLSClient.TTLSClient.InitInitialProtocolVersion" /><a href="flcTLSClient.TTLSClient.InitInitialProtocolVersion.htm" title="flcTLSClient.TTLSClient.InitInitialProtocolVersion">InitInitialProtocolVersion</a></td><td><div class="memberSummary" data-id="flcTLSClient.TTLSClient.InitInitialProtocolVersion"><p>Represents method <code class="inline">InitInitialProtocolVersion</code>.</p></div></td></tr><tr class="protected "><td><img src="images/protmethod.gif" title="protected method" /></td><td class="memberId" data-id="flcTLSClient.TTLSClient.InitServerPublicKey_RSA"><input type="hidden" value="flcTLSClient.TTLSClient.InitServerPublicKey_RSA" /><a href="flcTLSClient.TTLSClient.InitServerPublicKey_RSA.htm" title="flcTLSClient.TTLSClient.InitServerPublicKey_RSA">InitServerPublicKey_RSA</a></td><td><div class="memberSummary" data-id="flcTLSClient.TTLSClient.InitServerPublicKey_RSA"><p>Represents method <code class="inline">InitServerPublicKey_RSA</code>.</p></div></td></tr><tr class="protected "><td><img src="images/protmethod.gif" title="protected method" /></td><td class="memberId" data-id="flcTLSClient.TTLSClient.InitSessionProtocolVersion"><input type="hidden" value="flcTLSClient.TTLSClient.InitSessionProtocolVersion" /><a href="flcTLSClient.TTLSClient.InitSessionProtocolVersion.htm" title="flcTLSClient.TTLSClient.InitSessionProtocolVersion">InitSessionProtocolVersion</a></td><td><div class="memberSummary" data-id="flcTLSClient.TTLSClient.InitSessionProtocolVersion"><p>Represents method <code class="inline">InitSessionProtocolVersion</code>.</p></div></td></tr><tr class="protected "><td><img src="images/protmethod.gif" title="protected method" /></td><td class="memberId" data-id="flcTLSClient.TTLSClient.SendHandshakeCertificate"><input type="hidden" value="flcTLSClient.TTLSClient.SendHandshakeCertificate" /><a href="flcTLSClient.TTLSClient.SendHandshakeCertificate.htm" title="flcTLSClient.TTLSClient.SendHandshakeCertificate">SendHandshakeCertificate</a></td><td><div class="memberSummary" data-id="flcTLSClient.TTLSClient.SendHandshakeCertificate"><p>Represents method <code class="inline">SendHandshakeCertificate</code>.</p></div></td></tr><tr class="protected "><td><img src="images/protmethod.gif" title="protected method" /></td><td class="memberId" data-id="flcTLSClient.TTLSClient.SendHandshakeCertificateVerify"><input type="hidden" value="flcTLSClient.TTLSClient.SendHandshakeCertificateVerify" /><a href="flcTLSClient.TTLSClient.SendHandshakeCertificateVerify.htm" title="flcTLSClient.TTLSClient.SendHandshakeCertificateVerify">SendHandshakeCertificateVerify</a></td><td><div class="memberSummary" data-id="flcTLSClient.TTLSClient.SendHandshakeCertificateVerify"><p>Represents method <code class="inline">SendHandshakeCertificateVerify</code>.</p></div></td></tr><tr class="protected "><td><img src="images/protmethod.gif" title="protected method" /></td><td class="memberId" data-id="flcTLSClient.TTLSClient.SendHandshakeClientHello"><input type="hidden" value="flcTLSClient.TTLSClient.SendHandshakeClientHello" /><a href="flcTLSClient.TTLSClient.SendHandshakeClientHello.htm" title="flcTLSClient.TTLSClient.SendHandshakeClientHello">SendHandshakeClientHello</a></td><td><div class="memberSummary" data-id="flcTLSClient.TTLSClient.SendHandshakeClientHello"><p>Represents method <code class="inline">SendHandshakeClientHello</code>.</p></div></td></tr><tr class="protected "><td><img src="images/protmethod.gif" title="protected method" /></td><td class="memberId" data-id="flcTLSClient.TTLSClient.SendHandshakeClientKeyExchange"><input type="hidden" value="flcTLSClient.TTLSClient.SendHandshakeClientKeyExchange" /><a href="flcTLSClient.TTLSClient.SendHandshakeClientKeyExchange.htm" title="flcTLSClient.TTLSClient.SendHandshakeClientKeyExchange">SendHandshakeClientKeyExchange</a></td><td><div class="memberSummary" data-id="flcTLSClient.TTLSClient.SendHandshakeClientKeyExchange"><p>Represents method <code class="inline">SendHandshakeClientKeyExchange</code>.</p></div></td></tr><tr class="protected "><td><img src="images/protmethod.gif" title="protected method" /></td><td class="memberId" data-id="flcTLSClient.TTLSClient.SendHandshakeFinished"><input type="hidden" value="flcTLSClient.TTLSClient.SendHandshakeFinished" /><a href="flcTLSClient.TTLSClient.SendHandshakeFinished.htm" title="flcTLSClient.TTLSClient.SendHandshakeFinished">SendHandshakeFinished</a></td><td><div class="memberSummary" data-id="flcTLSClient.TTLSClient.SendHandshakeFinished"><p>Represents method <code class="inline">SendHandshakeFinished</code>.</p></div></td></tr><tr class="protected "><td><img src="images/protmethod.gif" title="protected method" /></td><td class="memberId" data-id="flcTLSClient.TTLSClient.SetClientState(TTLSClientState)"><input type="hidden" value="flcTLSClient.TTLSClient.SetClientState(TTLSClientState)" /><a href="flcTLSClient.TTLSClient.SetClientState.htm" title="flcTLSClient.TTLSClient.SetClientState(TTLSClientState)">SetClientState(TTLSClientState)</a></td><td><div class="memberSummary" data-id="flcTLSClient.TTLSClient.SetClientState(TTLSClientState)"><p>Represents method <code class="inline">SetClientState(TTLSClientState)</code>.</p></div></td></tr><tr class="member"><td><img src="images/pubmethod.gif" title="public method" /></td><td class="memberId" data-id="flcTLSClient.TTLSClient.Start"><input type="hidden" value="flcTLSClient.TTLSClient.Start" /><a href="flcTLSClient.TTLSClient.Start.htm" title="flcTLSClient.TTLSClient.Start">Start</a></td><td><div class="memberSummary" data-id="flcTLSClient.TTLSClient.Start"><p>Represents method <code class="inline">Start</code>.</p></div></td></tr></tbody></table><a href="#mainBody">Top</a></div>
</div>
</div>
</div>
</div>
</div>
</div>
<div id="footer">
<div id="footerContent">Copyright (c) 1995-2019, David J Butler. All rights reserved.</div>
</div>
</body>
</html>
